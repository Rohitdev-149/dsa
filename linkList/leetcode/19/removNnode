/*
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };

class Solution {
    public:
        ListNode* removeNthFromEnd(ListNode* head, int n) {
             int l=0;
                ListNode* temp=head;
                while(temp!=NULL){
                l++;
                temp=temp->next;
                }
                if(n==l){
                    head=head->next;
                    return head;
                }
                int nth=l-n+1;
                 temp=head;
                for(int i=1;i<nth-1;i++){
                 temp=temp->next;
                }
                temp->next=temp->next->next;
                return head;
        }
    };
*/
/*
/**

class Solution {
    public:
        ListNode* removeNthFromEnd(ListNode* head, int n) {
          ListNode *slow=head;
          ListNode *fast=head;
          for(int i=1;i<=n+1;i++){
             // if(fast==NULL) return NULL;
        if(fast==NULL) return head->next;
            fast=fast->next;
          }
          while(fast!=NULL){
           slow=slow->next;
           fast=fast->next;
          }
          slow->next=slow->next->next;
          return head;
    
        }
    };
*/